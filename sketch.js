let earth
let orbit
let orbitSlider
let population
let G = 120
const NNSave1 = {
  "INPUT_SIZE":5,
  "HIDDEN_ONE_SIZE":7,
  "HIDDEN_TWO_SIZE":7,
  "OUTPUT_SIZE":5,
  "wh1":[[-2.6444775552369855,-4.3602170665927495,-0.7407090916420235,-5.824806742799977,2.6115288642141894,0.5472746344639479,-0.6260941259998409],[2.8052257596304213,-3.232499635445771,1.3854630190325543,-2.8851835454901282,-0.8081581465771969,-1.2443853665985947,-5.421264778433086],[1.9761575027374163,5.490817460093255,-2.2823953721949763,2.257244895724151,-0.5004761811259817,-0.04010662323028591,-1.941801591378948],[1.5443793507182646,1.7951292750600225,-3.752853424224326,5.093591429910355,0.4639320493863707,9.141402986123099,0.8717536415183322],[-2.0706526818728133,-0.4674290788712705,3.1549644474015133,2.3857056852400502,-0.04676332953062484,1.519687530177264,2.0015459520669783]],
  "wh2":[[-2.387717005932512,0.04847421156538978,3.3651094273932953,-1.7413128089098562,0.692218372547799,0.7854082240293472,-1.02905953174864],[-12.550242124561834,1.503067981266319,-1.8020524009226486,0.3505077276239792,-9.95059430493429,5.182504965509781,1.2506716127475745],[3.265641476302439,-0.29007145483441854,-3.8448411824661473,-0.9331534059219158,5.0668327584255515,2.2396912265735853,2.0961076189033094],[-4.804288771161495,5.625092486712365,-4.191398832198879,-1.339789145719672,1.148856398862175,-1.3724125167952916,1.8772745845787813],[1.3280602831673938,-5.204845635538562,-1.5841462651311755,2.6490522797375875,-4.991946633173885,-6.4508732174217664,-1.121665448714126],[1.738703814426739,-3.9637840331765695,-2.685766900541254,2.6679091754230067,11.922496839700221,0.00956338062597728,2.7161776225418732],[-2.056105870270995,-0.9567573281119506,2.073305301675481,7.194155531777639,-1.2047837052295503,1.4088556782502677,7.843644316736118]],
  "wo":[[-2.8902983387243992,3.7125189130564342,2.1958715291183335,-2.0211206592758675,-0.2722118119001279],[-0.10979703366961474,-6.3473667039092385,-0.9200057697198781,14.431968554486573,-0.37547979226312833],[-7.079490642890923,-2.6482151721108362,-2.5003040928487708,4.105702758893896,2.2510974250904687],[1.413801433616933,-2.0863696513121472,4.157544921453508,-3.3427823520590647,2.2820944236944256],[7.505208884015479,-1.0904136549152084,-10.078331268287464,-2.077402915813123,9.021078345278001],[-4.272740236284644,5.669174976403076,1.282749695732759,-2.667211387666804,0.9323301653658811],[3.4220616233411922,-3.0831558082986223,-7.302024265283216,4.2363475735662055,4.191792374703822]],
  "bh1":[-3.5875656608857325,8.122529798591998,0.6087882003680809,2.9076422455567243,-0.8639148699322011,-1.8190566122620508,-0.9713921947524277],
  "bh2":[0.43825747349956556,1.5775741471057958,-0.5614466687990262,-3.6047410035119642,-3.4271643137205308,-0.5822619633406333,-3.1586533571555826],
  "bo":[5.429218654033649,-0.061218963969518175,-2.833088872323213,2.9891866599654575,2.3350266973078218]
};
NNSave2 = {
  "INPUT_SIZE":5,
  "HIDDEN_ONE_SIZE":7,
  "HIDDEN_TWO_SIZE":7,
  "OUTPUT_SIZE":5,
  "wh1":[[-2.6111281827244164,-7.160957229066262,-0.5832941275359251,-10.99962896758559,2.4301277924782396,-0.5743671315500126,-2.2062626375522525],[2.0835380303176563,-2.4125229830353088,2.1718002326738395,-11.653668606385935,-0.06472136179415139,-0.5183786204196696,-3.965594453043871],[2.20199759651006,1.7109844161256311,-2.6484700362039892,1.7218196078051262,-0.2979336789927459,-4.701336695769273,1.5781589408991559],[3.6129058069346836,-3.987921304085881,3.5351953977530663,4.3754038080816295,0.47751337186177745,8.02846924899198,3.0507749221575553],[-2.643868309752484,-0.5244360585426255,2.4104346479472065,-0.2561172388136339,-0.8416235948337745,-0.17462415396916114,6.2190686076857205]],
  "wh2":[[-3.0058711438349666,-2.544444546451218,7.2233727132507495,-8.200380360632396,0.6853668695487753,0.47404646952635543,0.8455443837211504],[-9.196113552535095,-1.6610500538030104,1.5225631026397826,-2.7383653975099103,-5.917047775757964,10.437321169161306,10.761891395025929],[4.290952060527372,-0.6626805212906057,-5.168679991471174,-1.5158174822140769,6.38267657703969,3.7510220414373325,-5.943300125232259],[-2.7020212766451057,7.8126502793807395,-4.241925088793104,-11.36346293381149,-5.660800613587737,-6.15030384235344,1.2180179305204768],[1.8070933842079948,-10.856274112381326,-3.2911243547966205,2.5908183331901977,-5.7498123198668845,-7.672734909897326,-1.6676657421890513],[5.46712331814871,-3.1156371840233303,-2.7153261609423986,3.2758371240803332,11.44196048482004,5.219900125511536,6.437614089945333],[-2.0737309357810707,4.03357227191825,3.036176915866043,8.491919998373815,4.689322246120129,-1.6935683758062672,11.592655903511762]],
  "wo":[[-3.188393343368121,4.34523178013319,3.5345984013746743,-0.5104555207054315,-6.297532877660569],[3.9330632759003272,-4.361037126237854,-1.7636158707175618,20.89108159847067,1.108210659248925],[-11.784451171845236,1.5848250519724443,-2.8413673721250814,6.975627792995938,3.147400368649058],[7.27957059202531,-0.5301470019134609,5.341666977868803,-4.4650258379866,3.4860143885411214],[10.560338437359194,2.6529353952882038,-15.760527941255653,-2.2062033348838117,7.901816436331158],[-3.7866211368174922,6.241806982767746,5.585677609988835,-6.115165016291186,2.220425369603512],[4.132906480702873,-0.8985361472810887,-3.874858979160235,5.724831856139193,7.585507908799644]],
  "bh1":[0.9873645336284075,2.7828687472551064,-4.221186632327142,7.428905783503793,-9.783006657457454,-2.736648553289753,-0.2962761732836082],
  "bh2":[1.2693004118586235,0.10836862802651304,-2.5617905104849923,-6.754738814679594,-3.607120221796121,-3.2748837156242634,-3.9631447386846426],
  "bo":[5.724922781399691,10.698054482607224,-5.419952075143136,7.637742414610438,3.711672220889838]
};
let csvContent

function setup() {
  createCanvas(windowWidth, windowHeight)
  angleMode(DEGREES)

  earth = new Earth(createVector(windowWidth / 2, windowHeight / 2), 65)
  orbit = new Orbit(random(100, min(windowWidth, windowHeight) / 2 - 20 - earth.r))
  population = new Population(1000)

  let nnVals = NNSave1;
  population.satellites[0].nn.wh1 = JSON.parse(JSON.stringify(nnVals.wh1));
  population.satellites[0].nn.wh2 = JSON.parse(JSON.stringify(nnVals.wh2));
  population.satellites[0].nn.wo = JSON.parse(JSON.stringify(nnVals.wo));
  population.satellites[0].nn.bh1 = JSON.parse(JSON.stringify(nnVals.bh1));
  population.satellites[0].nn.bh2 = JSON.parse(JSON.stringify(nnVals.bh2));
  population.satellites[0].nn.bo = JSON.parse(JSON.stringify(nnVals.bo));
  console.log(population.satellites[0]);

  nnVals = NNSave2;
  population.satellites[1].nn.wh1 = JSON.parse(JSON.stringify(nnVals.wh1));
  population.satellites[1].nn.wh2 = JSON.parse(JSON.stringify(nnVals.wh2));
  population.satellites[1].nn.wo = JSON.parse(JSON.stringify(nnVals.wo));
  population.satellites[1].nn.bh1 = JSON.parse(JSON.stringify(nnVals.bh1));
  population.satellites[1].nn.bh2 = JSON.parse(JSON.stringify(nnVals.bh2));
  population.satellites[1].nn.bo = JSON.parse(JSON.stringify(nnVals.bo));
  console.log(population.satellites[1]);

  csvContent = "data:text/csv;charset=utf-8,";
}

function draw() {
  background(180)
  textSize(16); noStroke(); fill(0);

  text("Generation: " + population.generation, 15, 20);
  if(population.generationDone()) {
    population.calculateFitness()

    //CSV Fitness save for data analysis
    let row = [population.generation, population.bestFitness, population.fitnessSum / population.size];
    csvContent += row.join(",") + "\r\n";

    population.naturalSelection()
    population.mutate()


    if((population.generation + 1) % 100 === 0) { //if next gen is gen 10, chagne orbit
      orbit.r = random(100, min(windowWidth, windowHeight) / 2 - 20 - earth.r)
    }
  } else {
    population.act(orbit.r);

    earth.show()
    orbit.show()
    population.show()

    earth.pull(population)
    population.update()
  }
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//Earth
function Earth(_pos, _r) {
  this.pos = _pos
  this.r = _r

  this.mass = _r * 1.25

  this.show = function() {
    noStroke(); fill(40, 122, 171);
    circle(this.pos.x, this.pos.y, this.r * 2)
  }

  this.pull = function(population) {
    for(let i = 0; i < population.size; i++) {
      let body = population.satellites[i]
      let force = createVector(this.pos.x - body.pos.x, this.pos.y - body.pos.y)
      let r = (this.pos).dist(body.pos)
      let magnitude = (G * this.mass * body.mass) / (r * r)

      force.setMag(magnitude)

      body.applyForce(force)
    }
  }
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//Orbit goal
function Orbit(_height) {
  this.r = _height

  this.show = function() {
    noFill(); stroke(255); strokeWeight(2);
    drawingContext.setLineDash([10, 10])
    circle(windowWidth / 2, windowHeight / 2, (this.r + earth.r) * 2)
  }
}
